(undo-tree-save-format-version . 1)
"4f85e36d2d76eb8989b763bca7aababe284d5546"
[nil nil nil nil (26099 61106 456428 0) 0 nil]
([nil current ((#(" " 0 1 (font-lock-face font-lock-string-face fontified t)) . -4556) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#("t" 0 1 (font-lock-face font-lock-string-face fontified t)) . -4557) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("e" 0 1 (font-lock-face font-lock-string-face fontified t)) . -4558) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("x" 0 1 (font-lock-face font-lock-string-face fontified t)) . -4559) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("t" 0 1 (font-lock-face font-lock-string-face fontified t)) . -4560) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 4561 (4556 . 4561) (#(" " 0 1 (font-lock-face font-lock-string-face fontified t)) . -4556) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("t" 0 1 (font-lock-face font-lock-string-face fontified t)) . -4557) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("e" 0 1 (font-lock-face font-lock-string-face fontified t)) . -4558) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("x" 0 1 (font-lock-face font-lock-string-face fontified t)) . -4559) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("t" 0 1 (font-lock-face font-lock-string-face fontified t)) . -4560) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) 4561 (4556 . 4561) (t 26098 31443 180828 327000)) nil (26099 61211 293780 0) 0 nil] [nil nil ((#(" " 0 1 (font-lock-face font-lock-string-face fontified t)) . -8487) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#("m" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8488) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("d" 0 1 (font-lock-face font-lock-string-face fontified nil)) . -8489) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#(":" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8490) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("t" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8491) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("e" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8492) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("x" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8493) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("t" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8494) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("-" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8495) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 8496 (8491 . 8496) (#("t" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8491) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("e" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8492) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("x" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8493) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("t" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8494) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("-" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8495) (undo-tree-id34 . -1) (undo-tree-id35 . -1) 8496 (8491 . 8496) (#("t" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8491) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("e" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8492) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("x" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8493) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("t" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8494) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("-" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8495) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) 8496 (8492 . 8496) (#("t" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8492) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("e" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8493) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 8494 (8492 . 8494) (#("e" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8492) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("x" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8493) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("t" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8494) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("-" 0 1 (font-lock-face font-lock-string-face fontified t)) . -8495) (undo-tree-id61 . -1) (undo-tree-id62 . -1) 8496 (8487 . 8496) (t 26098 31443 180828 327000)) ((#(" md:text-" 0 1 (font-lock-face font-lock-string-face fontified nil) 1 2 (font-lock-face font-lock-string-face fontified nil) 2 3 (font-lock-face font-lock-string-face fontified nil) 3 4 (font-lock-face font-lock-string-face fontified nil) 4 5 (font-lock-face font-lock-string-face fontified nil) 5 6 (font-lock-face font-lock-string-face fontified nil) 6 7 (font-lock-face font-lock-string-face fontified nil) 7 8 (font-lock-face font-lock-string-face fontified nil) 8 9 (font-lock-face font-lock-string-face fontified nil)) . 8487) (undo-tree-id72 . -9) (undo-tree-id73 . -5) (undo-tree-id74 . -9) (8492 . 8496) (#("te" 0 1 (font-lock-face font-lock-string-face fontified nil) 1 2 (font-lock-face font-lock-string-face fontified nil)) . 8492) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (8492 . 8494) (#("ext-" 0 1 (font-lock-face font-lock-string-face fontified nil) 1 2 (font-lock-face font-lock-string-face fontified nil) 2 3 (font-lock-face font-lock-string-face fontified nil) 3 4 (font-lock-face font-lock-string-face fontified nil)) . 8492) (undo-tree-id77 . -4) (undo-tree-id78 . -4) (undo-tree-id79 . -4) (8491 . 8496) (#("text-" 0 1 (font-lock-face font-lock-string-face fontified nil) 1 2 (font-lock-face font-lock-string-face fontified nil) 2 3 (font-lock-face font-lock-string-face fontified nil) 3 4 (font-lock-face font-lock-string-face fontified nil) 4 5 (font-lock-face font-lock-string-face fontified nil)) . 8491) (undo-tree-id80 . -5) (undo-tree-id81 . -5) (8491 . 8496) (#("text-" 0 1 (font-lock-face font-lock-string-face fontified nil) 1 2 (font-lock-face font-lock-string-face fontified nil) 2 3 (font-lock-face font-lock-string-face fontified nil) 3 4 (font-lock-face font-lock-string-face fontified nil) 4 5 (font-lock-face font-lock-string-face fontified nil)) . 8491) (undo-tree-id82 . -5) (undo-tree-id83 . -5) (8487 . 8496)) (26099 61105 866061 0) 0 nil])
nil
([nil nil ((#("\">" 0 1 (font-lock-face font-lock-string-face fontified nil) 1 2 (font-lock-face rjsx-tag-bracket-face rjsx-class > fontified nil)) . 8501) (undo-tree-id3 . 2) (8496 . 8501) (8487 . 8496)) ((#(" md:text-" 0 9 (font-lock-face font-lock-string-face fontified nil)) . 8487) (undo-tree-id63 . -9) (undo-tree-id64 . -9) (undo-tree-id65 . -9) (undo-tree-id66 . -9) (#("2xl\">" 0 3 (font-lock-face font-lock-string-face fontified nil) 3 4 (font-lock-face font-lock-string-face fontified nil) 4 5 (font-lock-face rjsx-tag-bracket-face rjsx-class > fontified nil)) . 8496) (undo-tree-id67 . -2) (undo-tree-id68 . 2) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id71 . -5) (8501 . 8503)) (26099 61105 530711 0) 0 nil])
([nil nil ((#(" md:text-2xl" 0 9 (font-lock-face font-lock-string-face fontified t) 9 12 (font-lock-face font-lock-string-face fontified t)) . 8487) (undo-tree-id0 . -11) (undo-tree-id1 . -11) (undo-tree-id2 . -11)) ((8487 . 8499)) (26099 61105 530499 0) 0 nil])
nil
